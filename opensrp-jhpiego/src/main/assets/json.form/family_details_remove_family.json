{
  "count": "1",
  "encounter_type": "Remove Entire Family",
  "entity_id": "",
  "relational_id": "",
  "metadata": {
    "start": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "start",
      "openmrs_entity_id": "163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "end": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "end",
      "openmrs_entity_id": "163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "today": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "encounter",
      "openmrs_entity_id": "encounter_date"
    },
    "deviceid": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "deviceid",
      "openmrs_entity_id": "163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "subscriberid": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "subscriberid",
      "openmrs_entity_id": "163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "simserial": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "simserial",
      "openmrs_entity_id": "163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "phonenumber": {
      "openmrs_entity_parent": "",
      "openmrs_entity": "concept",
      "openmrs_data_type": "phonenumber",
      "openmrs_entity_id": "163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    },
    "encounter_location": "",
    "look_up": {
      "entity_id": "",
      "value": ""
    }
  },
  "step1": {
    "title": "Remove Entire Family",
    "fields": [
      {
        "key": "spacer",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "spacer",
        "spacer_height": "40sp"
      },
      {
        "key": "details",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "label",
        "text": "",
        "text_size": "30px"
      },
      {
        "key": "divider1",
        "type": "h_line",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": ""
      },
      {
        "key": "spacer",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "type": "spacer",
        "spacer_height": "20sp"
      },
      {
        "key": "closure_reason_fam",
        "openmrs_entity_parent": "",
        "openmrs_entity": "concept",
        "openmrs_entity_id": "160417AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
        "openmrs_data_type": "select one",
        "type": "spinner",
        "hint": "Reason for closure",
        "values": [
          "Relocation",
          "Other"
        ],
        "v_required": {
          "value": "true",
          "err": "Please select a reason"
        },
        "openmrs_choice_ids": {
          "Moved away": "160415AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
          "Other": "5622AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
        }
      },
      {
        "key": "closure_reason_relocation_fam",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "openmrs_data_type": "text",
        "type": "spinner",
        "hint": "Household relocation *",
        "values": [
          "Within the district",
          "Outside the district"
        ],
        "v_required": {
          "value": "true",
          "err": "Please select location."
        },
        "relevance": {
          "step1:closure_reason_fam": {
            "type": "string",
            "ex": "equalTo(., \"Relocation\")"
          }
        }
      },
      {
        "key": "closure_reason_other_fam",
        "openmrs_entity_parent": "",
        "openmrs_entity": "",
        "openmrs_entity_id": "",
        "openmrs_data_type": "text",
        "type": "edit_text",
        "hint": "Other reason *",
        "v_required": {
          "value": "true",
          "err": "Please fill in the reason."
        },
        "relevance": {
          "step1:closure_reason_fam": {
            "type": "string",
            "ex": "equalTo(., \"Other\")"
          }
        }
      }
    ]
  }
}